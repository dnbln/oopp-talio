# Define STDOUT to be the console name.
appender.console.type=Console
appender.console.name=STDOUT
appender.console.layout.type=PatternLayout
appender.console.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} %n%m%n
# Define rolling file appender.
# The newest log is called latest.log, the older ones have their date and an assigned number.
appender.rolling.type=RollingFile
appender.rolling.name=RollingFile
appender.rolling.fileName=logs/latest.log
appender.rolling.filePattern=logs/app-%d{MM-dd-yy}-%i.log
# Define triggering policy for rolling file appender
# Each time the program is run a new log file will be made.
appender.rolling.policies.type=Policies
appender.rolling.policies.size.type=OnStartupTriggeringPolicy
# Define rollover strategy for rolling file appender
# At most 5 files different from the latest.log can exist of one date.
appender.rolling.strategy.type=DefaultRolloverStrategy
appender.rolling.strategy.max=5
# Define layout for rolling file appender
appender.rolling.layout.type=PatternLayout
appender.rolling.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} %n%m%n
# This enables the logging of level error to the RollingFile and the console (STDOUT)
# Define a logger for the root logger.
rootLogger.level=info
rootLogger.appenderRef.stdout.ref=STDOUT
rootLogger.appenderRef.file.ref=RollingFile
# Define a logger for errors only.
logger.error.name=talio_errors
logger.error.level=error
logger.error.appenderRef.rolling.ref=RollingFile
